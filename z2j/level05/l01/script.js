"use strict;"


/* TODO:
- Dodaj walidacje do pÃ³l, ktÃ³re tego wymagajÄ…. 
- Powinna siÄ™ uruchamiaÄ‡ po zatwiedzeniu formularza przyciskiem WyÅ›lij (lub enter ðŸ˜‰).
- Walidacja powinna byÄ‡ prosta, po prostu sprawdÅº czy dane pola sÄ… uzupeÅ‚nione.
- WaÅ¼ne aby sprawdziÄ‡ wszystkie potrzebne pola.
- JeÅ¼eli jest przynajmniej jeden bÅ‚Ä…d, zablokuj wykonywanie kolejnych akcji (patrz pkt niÅ¼ej).
- Po zatwierdzeniu formularza wyÅ›wietl alert oraz zadbaj o to, Å¼eby strona siÄ™ nie przeÅ‚adowywaÅ‚a po jego wysÅ‚aniu.
- ZwrÃ³Ä‡ teÅ¼ uwagÄ™, Å¼e oprÃ³cz wyÅ›wietlenia wartoÅ›ci wyÅ›wietla siÄ™ teÅ¼ zwrot grzecznoÅ›ciowy odpowiedni dla wybranej pÅ‚ci. Dobrze aby w Twoim formularzu teÅ¼ byÅ‚o pole o tym typie i miaÅ‚o wpÅ‚yw na wynik
- Pola formularza: ImiÄ™, Nazwisko, PÅ‚eÄ‡, Login, HasÅ‚o, Data urodzenia, Przycisk wysyÅ‚ajÄ…cy
*/

let hasEmptyFields;

const handleAlert = (formData) => {
  const zwrot = formData.get('gender') === 'female' ? 'Pani' : 'Pan';
  alert(`
    ${zwrot} ${formData.get('firstName')} ${formData.get('lastName')} urodzony ${formData.get('dob')} chce utworzyÄ‡ konto o loginie ${formData.get('login')}
  `);
};

const handleChange = (e) => {
  hasEmptyFields = true;
  const id = `error-${e.target.id}`;
  const errorElement = document.getElementById(id);
  if (errorElement) {
    errorElement.remove();
  }
  const formData = new FormData(registerForm);
  handleValidation(formData);
};

const handleValidation = (formData) => {
  hasEmptyFields = false;

  for (let [key, value] of formData) {
    if (value === '' || value === undefined || value === null) {
      hasEmptyFields = true;
      const errorElement = document.createElement("div");
      errorElement.textContent = "Pole nie moÅ¼e byÄ‡ puste";
      errorElement.classList.add("alert");
      errorElement.id = `error-${key}`;
      const elementId = String(key);
      const adjacentElement = document.getElementById(elementId);
      adjacentElement.insertAdjacentElement("afterend", errorElement);
      return false;
    }
  }

  hasEmptyFields = false;
  return true;
};

const handleSubmit = (e) => {
  e.preventDefault();
  hasEmptyFields = true;
  const formData = new FormData(registerForm);
  document.querySelectorAll('.alert').forEach(element => element.remove());
  const isValidated = handleValidation(formData);

  if (!hasEmptyFields && isValidated) {
    handleAlert(formData);
  }
};

const submitButton = document.getElementById("submitButton");
submitButton.addEventListener("click", handleSubmit);
const registerForm = document.getElementById('registerForm');
registerForm.addEventListener('input', handleChange);
